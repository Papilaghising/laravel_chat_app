- name: Copy docker.sh script to the remote server
  copy:
    src: ./docker.sh
    dest: /tmp/docker.sh
    mode: '0755'


- name: Run docker.sh script
  shell: sh /tmp/docker.sh
    
- name: Display operating system
  debug:
    msg: "Operating System is {{ ansible_os_family }} {{ ansible_distribution }} {{ ansible_distribution_version }}"


- name: Install pip
  apt:
    name: python3-pip
    state: present
    update_cache: yes

- name: Install awscli
  pip:
    name: awscli
    state: present


- name: Start and enable Docker
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Debug docker_image_tag
  debug:
    var: docker_image_tag


- name: log in to Amazon ECRr 
  shell: |
    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 426857564226.dkr.ecr.us-east-1.amazonaws.com/{{ ecr_name }} 
    # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 426857564226.dkr.ecr.us-east-1.amazonaws.com/dev-chatapp-ecr
   

- name: Pull Docker image
  docker_image:
    name: "426857564226.dkr.ecr.us-east-1.amazonaws.com/{{ ecr_name }}"
    tag: "{{ docker_image_tag }}"
    # tag: 259c9eb90016384f3c7a03434e5d014a1df5281f-9944520578-1
    source: pull


- name: Run Docker container
  docker_container:
    name: laravel_app
    image: "426857564226.dkr.ecr.us-east-1.amazonaws.com/{{ ecr_name }}:{{ docker_image_tag }}"
    # image: "426857564226.dkr.ecr.us-east-1.amazonaws.com/dev-chatapp-ecr:259c9eb90016384f3c7a03434e5d014a1df5281f-9944520578-1"
    state: started
    ports:
      - "8000:8000"
  notify: Restart nginx
  





